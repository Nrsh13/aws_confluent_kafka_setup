{
  "version": 4,
  "terraform_version": "1.3.0",
  "serial": 7,
  "lineage": "38fe004c-417b-5007-d1db-0d513ccd28dd",
  "outputs": {
    "EC2_SG_Name": {
      "value": "nrsh13-lab01-ansiServerSG",
      "type": "string"
    },
    "Instance_ID": {
      "value": [
        "i-07a67ca66133783bd"
      ],
      "type": [
        "tuple",
        [
          "string"
        ]
      ]
    },
    "Private_IP": {
      "value": [
        "172.31.25.203"
      ],
      "type": [
        "tuple",
        [
          "string"
        ]
      ]
    },
    "Public_IP": {
      "value": [
        "13.55.148.39"
      ],
      "type": [
        "tuple",
        [
          "string"
        ]
      ]
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "iam_base_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2707777283",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Id\": \"S3-Access-Policy\",\n  \"Statement\": [\n    {\n      \"Sid\": \"S3AndSSMAccess\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ssm:PutParameter\",\n        \"ssm:GetParametersByPath\",\n        \"ssm:GetParameters\",\n        \"ssm:GetParameterHistory\",\n        \"ssm:GetParameter\",\n        \"s3:PutObject*\",\n        \"s3:PutLifecycleConfiguration\",\n        \"s3:ListBucket\",\n        \"s3:GetObject*\",\n        \"s3:GetLifecycleConfiguration\",\n        \"s3:DeleteObject*\",\n        \"s3:CreateBucket\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"LoggingAccess\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\",\n        \"logs:DescribeLogGroups\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\",\n        \"ec2:DescribeInstances\",\n        \"ec2:Describe*\",\n        \"cloudwatch:PutMetricData\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": "S3-Access-Policy",
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "s3:CreateBucket",
                  "s3:DeleteObject*",
                  "s3:GetLifecycleConfiguration",
                  "s3:GetObject*",
                  "s3:ListBucket",
                  "s3:PutLifecycleConfiguration",
                  "s3:PutObject*",
                  "ssm:GetParameter",
                  "ssm:GetParameterHistory",
                  "ssm:GetParameters",
                  "ssm:GetParametersByPath",
                  "ssm:PutParameter"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "S3AndSSMAccess"
              },
              {
                "actions": [
                  "cloudwatch:PutMetricData",
                  "ec2:Describe*",
                  "ec2:DescribeInstances",
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:DescribeLogGroups",
                  "logs:DescribeLogStreams",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "LoggingAccess"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_subnets",
      "name": "subnet_ids",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filter": [
              {
                "name": "vpc-id",
                "values": [
                  "vpc-8f84d6e8"
                ]
              }
            ],
            "id": "ap-southeast-2",
            "ids": [
              "subnet-0f172d68",
              "subnet-863304cf",
              "subnet-4c3d8814"
            ],
            "tags": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "ec2_userdata",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "caed21397ac789df8ffa90442babcf9c6e2af11fba15709c8e104adb7b78f0f1",
            "rendered": "#!/bin/bash\n# yum update -y\nyum install -y python39 dos2unix ansible conntrack socat postgresql mariadb wget curl git jq unzip java-1.8.0-openjdk openldap* vim nc bind-utils net-tools\n\n########### Passing Less SSH Access #########\nuseradd ansible\nmkdir /home/ansible\nchown -R ansible:ansible /home/ansible\n\ngroupadd docker\nusermod -aG docker ansible\nsystemctl daemon-reload\n\necho \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyaWxlhIbhvZgUJD7qI70a4dWe6AbgZRHgC+TesPHi56IYnNgCDZ4J8VFff3SCe9ho91TjnLXOeZPWM056mQr09bDMtgMpbv8DG+kaAdgVq0D/y4Ae3QLnBNt1fqvrrjod63HMolFDoCDzBDdrFU91u7HSkpcNFWFprcameqwXY8FHSkfwRrIk2UPuPI4nDX5QZ1tsYzmn8PFkyMQi4n4uq3K9P67pWZRulSMqukfuHV8XmFyACL7hbt6knCAyRMb9q9fjWdcEbqRgMNGqbTIcztXYZEsaIqay0PrITXPmzyEYC32mXPCzBX81852gGc47/2pYk+6lsfyoDspI2Dyj ansible\n\" \u003e /tmp/authorized_keys\nsu - ansible -c \"mkdir -p ~/.ssh;touch ~/.ssh/authorized_keys;chmod 700 ~/.ssh;chmod 600 ~/.ssh/authorized_keys\"\nsu - ansible -c \"cat /tmp/authorized_keys \u003e\u003e /home/ansible/.ssh/authorized_keys\"\nsed -i -e '3 i +:ansible:ALL' /etc/security/access.conf\nchmod 755 /etc/sudoers\necho -e \"\\nansible ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers\nchmod 440 /etc/sudoers\n\n########## aws, kubectl CLI installation \n# AWS CLI 2\npython3.9 -m pip uninstall -y awscli\nrm -rf /opt/anaconda/bin/aws\n\ncurl -s \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\nunzip awscliv2.zip\n./aws/install   # will install at /usr/local/bin/aws (soft link)\n# Change permissions to main folder to allow non-root users to access awscli.\nchmod 755 -R /usr/local/aws-cli\nrm -rf ./aws\naws --version\n\n# Kubectl \ncurl -LO \"https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\"\nchmod +x ./kubectl\nmv ./kubectl /usr/local/bin/kubectl\nkubectl version\n\n# Confluent CLI -\nwget -q https://packages.confluent.io/rpm/6.2/confluent-cli-6.2.2-1.x86_64.rpm\nyum localinstall -y confluent-cli-6.2.2-1.x86_64.rpm\nchmod +x /usr/bin/confluent\n\n########### Packages Install ############\n# For UI and Kafka setup\nservice iptables stop\nchmod 777 /var/lib\npython3.9 -m pip install confluent-kafka confluent-kafka[avro] requests dateutils fastavro jsonschema",
            "template": "#!/bin/bash\n# yum update -y\nyum install -y python39 dos2unix ansible conntrack socat postgresql mariadb wget curl git jq unzip java-1.8.0-openjdk openldap* vim nc bind-utils net-tools\n\n########### Passing Less SSH Access #########\nuseradd ${passwordless_ssh_user}\nmkdir /home/${passwordless_ssh_user}\nchown -R ${passwordless_ssh_user}:${passwordless_ssh_user} /home/${passwordless_ssh_user}\n\ngroupadd docker\nusermod -aG docker ${passwordless_ssh_user}\nsystemctl daemon-reload\n\necho \"${public_key}\" \u003e /tmp/authorized_keys\nsu - ${passwordless_ssh_user} -c \"mkdir -p ~/.ssh;touch ~/.ssh/authorized_keys;chmod 700 ~/.ssh;chmod 600 ~/.ssh/authorized_keys\"\nsu - ${passwordless_ssh_user} -c \"cat /tmp/authorized_keys \u003e\u003e /home/${passwordless_ssh_user}/.ssh/authorized_keys\"\nsed -i -e '3 i +:${passwordless_ssh_user}:ALL' /etc/security/access.conf\nchmod 755 /etc/sudoers\necho -e \"\\n${passwordless_ssh_user} ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers\nchmod 440 /etc/sudoers\n\n########## aws, kubectl CLI installation \n# AWS CLI 2\npython3.9 -m pip uninstall -y awscli\nrm -rf /opt/anaconda/bin/aws\n\ncurl -s \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\nunzip awscliv2.zip\n./aws/install   # will install at /usr/local/bin/aws (soft link)\n# Change permissions to main folder to allow non-root users to access awscli.\nchmod 755 -R /usr/local/aws-cli\nrm -rf ./aws\naws --version\n\n# Kubectl \ncurl -LO \"https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\"\nchmod +x ./kubectl\nmv ./kubectl /usr/local/bin/kubectl\nkubectl version\n\n# Confluent CLI -\nwget -q https://packages.confluent.io/rpm/6.2/confluent-cli-6.2.2-1.x86_64.rpm\nyum localinstall -y confluent-cli-6.2.2-1.x86_64.rpm\nchmod +x /usr/bin/confluent\n\n########### Packages Install ############\n# For UI and Kafka setup\nservice iptables stop\nchmod 777 /var/lib\npython3.9 -m pip install confluent-kafka confluent-kafka[avro] requests dateutils fastavro jsonschema",
            "vars": {
              "aws_region": "ap-southeast-2",
              "passwordless_ssh_user": "ansible",
              "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyaWxlhIbhvZgUJD7qI70a4dWe6AbgZRHgC+TesPHi56IYnNgCDZ4J8VFff3SCe9ho91TjnLXOeZPWM056mQr09bDMtgMpbv8DG+kaAdgVq0D/y4Ae3QLnBNt1fqvrrjod63HMolFDoCDzBDdrFU91u7HSkpcNFWFprcameqwXY8FHSkfwRrIk2UPuPI4nDX5QZ1tsYzmn8PFkyMQi4n4uq3K9P67pWZRulSMqukfuHV8XmFyACL7hbt6knCAyRMb9q9fjWdcEbqRgMNGqbTIcztXYZEsaIqay0PrITXPmzyEYC32mXPCzBX81852gGc47/2pYk+6lsfyoDspI2Dyj ansible\n"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::428706479336:instance-profile/nrsh13-lab01-ansiEC2RoleInstanceProfile",
            "create_date": "2023-04-11T03:34:29Z",
            "id": "nrsh13-lab01-ansiEC2RoleInstanceProfile",
            "name": "nrsh13-lab01-ansiEC2RoleInstanceProfile",
            "name_prefix": null,
            "path": "/",
            "role": "nrsh13-lab01-ansiEC2Role",
            "tags": {},
            "tags_all": {},
            "unique_id": "AIPAWHUHFXTUIXXHB25XQ"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::428706479336:policy/nrsh13-lab01-ansiEC2RolePolicy",
            "description": "",
            "id": "arn:aws:iam::428706479336:policy/nrsh13-lab01-ansiEC2RolePolicy",
            "name": "nrsh13-lab01-ansiEC2RolePolicy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Id\":\"S3-Access-Policy\",\"Statement\":[{\"Action\":[\"ssm:PutParameter\",\"ssm:GetParametersByPath\",\"ssm:GetParameters\",\"ssm:GetParameterHistory\",\"ssm:GetParameter\",\"s3:PutObject*\",\"s3:PutLifecycleConfiguration\",\"s3:ListBucket\",\"s3:GetObject*\",\"s3:GetLifecycleConfiguration\",\"s3:DeleteObject*\",\"s3:CreateBucket\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"S3AndSSMAccess\"},{\"Action\":[\"logs:PutLogEvents\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\",\"ec2:DescribeInstances\",\"ec2:Describe*\",\"cloudwatch:PutMetricData\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"LoggingAccess\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAWHUHFXTUGD6CO7QGB",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_iam_policy_document.iam_base_policy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::428706479336:role/nrsh13-lab01-ansiEC2Role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ssm.amazonaws.com\",\"ec2.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2023-04-11T03:34:24Z",
            "description": "nrsh13-lab01-ansiEC2Role",
            "force_detach_policies": false,
            "id": "nrsh13-lab01-ansiEC2Role",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::428706479336:policy/nrsh13-lab01-ansiEC2RolePolicy",
              "arn:aws:iam::aws:policy/AdministratorAccess",
              "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
            ],
            "max_session_duration": 3600,
            "name": "nrsh13-lab01-ansiEC2Role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAWHUHFXTUAYY77XDF5"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "extra",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "nrsh13-lab01-ansiEC2Role-20230411033428747000000003",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2FullAccess",
            "role": "nrsh13-lab01-ansiEC2Role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "nrsh13-lab01-ansiEC2Role-20230411033428620900000001",
            "policy_arn": "arn:aws:iam::aws:policy/AdministratorAccess",
            "role": "nrsh13-lab01-ansiEC2Role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "nrsh13-lab01-ansiEC2Role-20230411033428671200000002",
            "policy_arn": "arn:aws:iam::428706479336:policy/nrsh13-lab01-ansiEC2RolePolicy",
            "role": "nrsh13-lab01-ansiEC2Role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.this",
            "aws_iam_role.this",
            "data.aws_iam_policy_document.iam_base_policy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "my_ec2_instances",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0808460885ff81045",
            "arn": "arn:aws:ec2:ap-southeast-2:428706479336:instance/i-07a67ca66133783bd",
            "associate_public_ip_address": true,
            "availability_zone": "ap-southeast-2c",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 4,
            "cpu_threads_per_core": 2,
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "nrsh13-lab01-ansiEC2RoleInstanceProfile",
            "id": "i-07a67ca66133783bd",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t3.2xlarge",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "ansible",
            "launch_template": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": null,
            "primary_network_interface_id": "eni-033166e6dbec19858",
            "private_dns": "ip-172-31-25-203.ap-southeast-2.compute.internal",
            "private_ip": "172.31.25.203",
            "public_dns": "ec2-13-55-148-39.ap-southeast-2.compute.amazonaws.com",
            "public_ip": "13.55.148.39",
            "root_block_device": [
              {
                "delete_on_termination": false,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 150,
                "kms_key_id": "",
                "tags": null,
                "throughput": 0,
                "volume_id": "vol-09858950aa5493771",
                "volume_size": 50,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [
              "nrsh13-lab01-ansiServerSG"
            ],
            "source_dest_check": true,
            "subnet_id": "subnet-4c3d8814",
            "tags": {
              "Environment": "nrsh13",
              "Name": "ansi-lab01-01",
              "domain_join": "false"
            },
            "tags_all": {
              "Environment": "nrsh13",
              "Name": "ansi-lab01-01",
              "domain_join": "false"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "fd23a24f87dacd5fd1a3d00f4fab29301f7d586b",
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-02faf38b713377054"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_key_pair.ec2-key",
            "aws_security_group.ec2_server_sg",
            "data.aws_subnets.subnet_ids",
            "data.template_file.ec2_userdata"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_key_pair",
      "name": "ec2-key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:428706479336:key-pair/ansible",
            "fingerprint": "97:c8:37:4d:66:a2:92:61:7f:f0:99:e1:bc:1b:03:64",
            "id": "ansible",
            "key_name": "ansible",
            "key_name_prefix": "",
            "key_pair_id": "key-0b63117e0d14ec093",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyaWxlhIbhvZgUJD7qI70a4dWe6AbgZRHgC+TesPHi56IYnNgCDZ4J8VFff3SCe9ho91TjnLXOeZPWM056mQr09bDMtgMpbv8DG+kaAdgVq0D/y4Ae3QLnBNt1fqvrrjod63HMolFDoCDzBDdrFU91u7HSkpcNFWFprcameqwXY8FHSkfwRrIk2UPuPI4nDX5QZ1tsYzmn8PFkyMQi4n4uq3K9P67pWZRulSMqukfuHV8XmFyACL7hbt6knCAyRMb9q9fjWdcEbqRgMNGqbTIcztXYZEsaIqay0PrITXPmzyEYC32mXPCzBX81852gGc47/2pYk+6lsfyoDspI2Dyj ansible",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "ec2_server_sg",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:428706479336:security-group/sg-02faf38b713377054",
            "description": "The security group for the ansi Server",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Open to World - Download Packages Requirment",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [
                  "172.31.0.0/16"
                ],
                "description": "SSH with in VPC",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "id": "sg-02faf38b713377054",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Open to World - Download Packages Requirment",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [
                  "172.31.0.0/16"
                ],
                "description": "SSH with in VPC",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "name": "nrsh13-lab01-ansiServerSG",
            "name_prefix": "",
            "owner_id": "428706479336",
            "revoke_rules_on_delete": false,
            "tags": {
              "Environment": "nrsh13"
            },
            "tags_all": {
              "Environment": "nrsh13"
            },
            "timeouts": null,
            "vpc_id": "vpc-8f84d6e8"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    }
  ],
  "check_results": []
}
